workflows:
  version: 2
  build-all:
    jobs:
      - build-nix
      - build-stack
      - build-cabal

jobs:
  build-nix:
    docker:
      - image: nixos/nix:2.1.3
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk --no-progress update
            apk --no-progress add ca-certificates
            nix-channel --update
            nix-env -iA cachix -f https://cachix.org/api/v1/install
            USER=dummy cachix use utdemir
      - run:
          name: Push Cachix
          command: |
            if [ -n "$CACHIX_SIGNING_KEY" ];
              then nix-store -qR --include-outputs $(nix-instantiate default.nix) | cachix push utdemir
            fi
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build the package
          command: nix-build --keep-going -j 4
  build-stack:
    docker:
      - image: fpco/stack-build:lts-14.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - dot-stack
      - run:
          name: Build the package
          command: stack build -j1 --no-docker | cat
      - save_cache:
          key: dot-stack
          paths:
            - "~/.stack"
            - ".stack-work"
  build-cabal:
    docker:
      - image: nixos/nix:2.1.3
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk --no-progress update
            apk --no-progress add ca-certificates
            nix-channel --update
            nix-env -iA cachix -f https://cachix.org/api/v1/install
            USER=dummy cachix use utdemir
      - run:
         name: Update cabal cache
         command: nix-shell default.nix -A systemShell --run 'cabal new-update | cat'
      - run:
         name: Build the package
         command: nix-shell default.nix -A systemShell --run 'cabal new-build -j1 all | cat'
      - save_cache:
         key: dot-cabal
         paths:
           - "~/.cabal"
           - ".dist-newbuild"
